input {
  file {
    path => "/home/tmp/log"
    start_position => beginning
  }
}

filter { 
	grok {
            match => ['message', '%{TIMESTAMP_ISO8601:timestamp} %{IP:clientip} %{NOTSPACE:scheme} %{HOSTNAME:http_host} %{NOTSPACE:method} %{NOTSPACE:url} %{NOTSPACE:data} %{NOTSPACE:host} %{NOTSPACE:upstreamhost} %{NUMBER:size} %{NOTSPACE:responsetime} %{NOTSPACE:upstreamtime} %{NOTSPACE:xff} %{NOTSPACE:referer} "%{DATA:agent}" %{NOTSPACE:uuid} %{INT:status}']
        }	
	date {
	    match => [ "timestamp","dd/MMM/yyyy:HH:mm:ss Z","ISO8601", "yyyy-MM-dd HH:mm:ss" ]
	    locale => "cn"
	   #target => "timestamp"
	  }
	geoip {
		source => "clientip"
		#fields => ["city_name", "continent_code", "country_code2", "country_code3", "country_name", "dma_code", "ip", "latitude", "longitude", "postal_code", "region_name","region_code", "timezone",location]
		target=>"geoip"
	    add_field => {
			#"addr" => "%{[geoip][country_name]} %{[geoip][real_region_name]} %{[geoip][city_name]}"
			"region_code" => "%{[geoip][region_name]}"
		}
    }
	ipip {
          source => "clientip"
          target => src_ip
	  add_field => {
			"addr" => "%{[src_ip][country]} %{[src_ip][province]} %{[src_ip][city]}"
			#"region_code" => "%{[geoip][region_name]}"
		}
        }
	useragent{
		    source => "agent"
		    target => "useragent"
		  }
	uuid {
			target => "eventid"
		}
	kv{
	    source => "data"
	    field_split => "&"
        #remove_field => [ "url_args", "uri", "request" ]
	}
	urldecode {
			 field => "data" #all_fields => true
		    }
	ruby {
		init => "require 'base64' "
		code => "
	     	parsed = LogStash::Json.load(Base64.decode64(event.get('data')))
			parsed['ip'] = event.get('clientip')
			parsed['addr'] = event.get('addr')
			parsed['region_code'] = event.get('region_code')
			parsed['eventid'] = event.get('eventid')			
			parsed['timestamp'] = event.get('timestamp')
			parsed['token'] = event.get('token')
			event.set('data',parsed)				
			"
	    }
	#base64 {
	#	    field => "blob"
	#	}
	#json {
	#		source => "data"
	#		target => "data"
	#	}
	mutate{  
		#Sgsub => [ "message", "\r", "" ] 
		#split => ["data","&"]  
		#add_field => {
		#	"data" => "%{datastr}"
		#	}
		#merge => ["datajso","token"]
		 remove_field => "message" 
		 #remove_field => "data"
		 remove_field => "token"
		 remove_field => "addr"
		 remove_field => "clientip"
		 remove_field => "region_code"
		 remove_field => "eventid"
		 remove_field => "timestamp" 
		 #remove_field => "@version"      
		 #remove_field => "host"      
		 #remove_field => "path" 
		 #remove_field => "@timestamp"      
		 #remove_field => "tags"      
		 #remove_field => "url" 
		 #remove_field => "uuid" 
		 #remove_field => "responsetime"
		 #remove_field => "upstreamtime"
		 #remove_field => "status"
		 #remove_field => "xff"
		 #remove_field => "size"
		 #remove_field => "upstreamhost"
		 #remove_field => "http_host"
		 #remove_field => "scheme"
		 #remove_field => "method"
		 #remove_field => "referer"
		  remove_field => "agent"
		 #remove_field => "useragent"
		 #remove_field => "geoip"
		 remove_field => "src_ip"
	  }

}

output {
	stdout { 
		#id => "my_plugin_id"
		#codec => json
		codec => rubydebug
	}
        logservice {
		codec => "json"
		endpoint => "***"
		project => "***"
		logstore => "***"
		topic => ""
		source => ""
		access_key_id => "***"
		access_key_secret => "***"
		max_send_retry => 10
	}
}
